name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# cf. https://github.com/mamba-org/provision-with-micromamba#important
defaults:
  run:
    shell: bash -l {0}

env:
  # Path to directory with reference sequences.
  REF_DIR: /home/runner/work/references
  # Path to the directory with ClinVar download.
  CLINVAR_DIR: /home/runner/work/clinvar
  # Parse to the directory with clinvar-tsv output files.
  OUTPUT_DIR: /home/runner/work/output
  # Python version
  PYTHON_VERSION: "3.10"
  # annonars package version
  ANNONARS_VERSION: "0.12.4"
  # clinvar-tsv package version
  CLINVAR_TSV_VERSION: "0.6.2"
  # Maximal number of RCVs to process.
  MAX_RCVS: 1000

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: khan/pull-request-workflow-cancel@1.0.0
        with:
          workflows: "main.yml"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  # - name: Install Conda environment
  #   uses: mamba-org/setup-micromamba@v1
  #   with:
  #     cache-environment: true
  #     environment-name: annonars-data-clinvar
  #     condarc: |
  #       channels:
  #         - conda-forge
  #         - bioconda
  #         - defaults
  #     create-args: >-
  #       python=3.10
  #       samtools
  #       htslib
  #       annonars=${{ matrix.annonars_version }}
  #       clinvar-tsv=${{ matrix.clinvar_tsv_version }}

  # Download-Ref: Download reference sequences
  Download-Ref:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-name: annonars-data-clinvar
          condarc: |
            channels:
              - conda-forge
              - bioconda
              - defaults
          create-args: >-
            samtools
            htslib

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache reference files
        uses: actions/cache@v3
        with:
          path: ${{ env.REF_DIR }}
          key: download-ref-${{ steps.get-today.outputs.today }}

      - name: Download reference files if necessary
        run: bash src/download-refs.sh

  # Download-ClinVar: Download "weekly" ClinVar XML file.
  Download-ClinVar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Cache downloaded ClinVar file
        uses: actions/cache@v3
        with:
          path: ${{ env.CLINVAR_DIR }}
          key: download-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}

      - name: Download reference files if necessary
        run: bash src/download-clinvar.sh
        env:
          CLINVAR_RELEASE: "${{ steps.get-clinvar.outputs.clinvar-release }}"


  # Convert-ClinVar: Convert ClinVar XML file to TSV.
  Convert-Clinvar:
    runs-on: ubuntu-latest
    needs: Download-ClinVar
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-name: annonars-data-clinvar
          condarc: |
            channels:
              - conda-forge
              - bioconda
              - defaults
          create-args: >-
            samtools
            htslib
            python=${{ env.PYTHON_VERSION }}
            annonars=${{ env.ANNONARS_VERSION }}
            clinvar-tsv=${{ env.CLINVAR_TSV_VERSION }}

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Cache GRCh37 sequence variant parse_xml output
        id: cache-grch37-seqvar-parse-xml-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/GRCh37/seqvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-GRCh37-seqvar

      - name: Cache GRCh37 structural variant parse_xml output
        id: cache-grch37-strucvar-parse-xml-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/GRCh37/strucvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-GRCh37-strucvar

      - name: Cache GRCh38 sequence variant parse_xml output
        id: cache-grch38-seqvar-parse-xml-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/GRCh38/seqvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-GRCh38-seqvar

      - name: Cache GRCh38 structural variant parse_xml output
        id: cache-grch38-strucvar-parse-xml-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/GRCh38/strucvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-GRCh38-strucvar

      - name: Retrieve cached ClinVar file
        if: |
          (steps.cache-grch37-seqvar-parse-xml-output.outputs.cache-hit != 'true') ||
          (steps.cache-grch37-strucvar-parse-xml-output.outputs.cache-hit != 'true') ||
          (steps.cache-grch38-seqvar-parse-xml-output.outputs.cache-hit != 'true') ||
          (steps.cache-grch38-strucvar-parse-xml-output.outputs.cache-hit != 'true')
        uses: actions/cache@v3
        with:
          path: ${{ env.CLINVAR_DIR }}
          key: download-clivar-${{ steps.get-clinvar.outputs.clinvar-release }}
          fail-on-cache-miss: true

      - name: Run the conversion
        run: bash src/run-parse-xml.sh
        env:
          CLINVAR_RELEASE: "${{ steps.get-clinvar.outputs.clinvar-release }}"

  # Normalize-SeqVars: Normalize small variants.
  Normalize-SeqVars:
    runs-on: ubuntu-latest
    needs:
      - Convert-Clinvar
      - Download-Ref
    strategy:
      matrix:
        genome_release:
          - GRCh37
          - GRCh38
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-name: annonars-data-clinvar
          condarc: |
            channels:
              - conda-forge
              - bioconda
              - defaults
          create-args: >-
            samtools
            htslib
            python=${{ env.PYTHON_VERSION }}
            annonars=${{ env.ANNONARS_VERSION }}
            clinvar-tsv=${{ env.CLINVAR_TSV_VERSION }}

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache conversion output
        id: cache-conversion-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/normalized
          key: normalize-seqvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}

      - name: Retrieve sequence variant parse_xml output cache
        if: steps.cache-conversion-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}-seqvar
          fail-on-cache-miss: true

      - name: Retrieve reference cache
        if: steps.cache-conversion-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.REF_DIR }}
          key: download-ref-${{ steps.get-today.outputs.today }}
          fail-on-cache-miss: true

      - name: Run the conversion
        if: steps.cache-conversion-output.outputs.cache-hit != 'true'
        run: bash src/run-normalize-tsv.sh
        env:
          GENOME_RELEASE: "${{ matrix.genome_release }}"

  # Sort-SeqVars: Sort small variants.
  Sort-SeqVars:
    runs-on: ubuntu-latest
    needs:
      - Normalize-SeqVars
    strategy:
      matrix:
        genome_release:
          - GRCh37
          - GRCh38
    steps:
      - uses: actions/checkout@v2

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache sorting output
        id: cache-sort-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/sorted
          key: sort-seqvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}

      - name: Retrieve conversion output cache
        if: steps.cache-sort-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/normalized
          key: normalize-seqvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}
          fail-on-cache-miss: true

      - name: Run the sorting
        if: steps.cache-sort-output.outputs.cache-hit != 'true'
        run: bash src/run-sort-seqvar.sh
        env:
          GENOME_RELEASE: "${{ matrix.genome_release }}"

  # Sort-StrucVars: Sort structural variants.
  Sort-StrucVars:
    runs-on: ubuntu-latest
    needs:
      - Convert-Clinvar
    strategy:
      matrix:
        genome_release:
          - GRCh37
          - GRCh38
    steps:
      - uses: actions/checkout@v2

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache sorting output
        id: cache-sort-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/strucvar/sorted
          key: sort-strucvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}

      - name: Retrieve conversion output cache
        if: steps.cache-sort-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/strucvar/parsed
          key: convert-clinvar-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}-strucvar
          fail-on-cache-miss: true

      - name: Run the sorting
        if: steps.cache-sort-output.outputs.cache-hit != 'true'
        run: bash src/run-sort-strucvar.sh
        env:
          GENOME_RELEASE: "${{ matrix.genome_release }}"

  # Merge-SeqVars: merge sequence variants RCV into VCV records.
  Merge-SeqVars:
    runs-on: ubuntu-latest
    needs:
      - Sort-SeqVars
    strategy:
      matrix:
        genome_release:
          - GRCh37
          - GRCh38
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-name: annonars-data-clinvar
          condarc: |
            channels:
              - conda-forge
              - bioconda
              - defaults
          create-args: >-
            samtools
            htslib
            python=${{ env.PYTHON_VERSION }}
            annonars=${{ env.ANNONARS_VERSION }}
            clinvar-tsv=${{ env.CLINVAR_TSV_VERSION }}

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache merge seqvars output
        id: cache-merge-seqvars-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/merged
          key: merge-seqvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}

      - name: Retrieve sorting output
        if: steps.cache-merge-seqvars-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/seqvar/sorted
          key: sort-seqvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}
          fail-on-cache-miss: true

      - name: Run the merging
        if: steps.cache-merge-seqvars-output.outputs.cache-hit != 'true'
        run: bash src/run-merge-seqvars.sh
        env:
          GENOME_RELEASE: "${{ matrix.genome_release }}"

  # Merge-StrucVars: merge structural variants RCV into VCV records.
  Merge-StrucVars:
    runs-on: ubuntu-latest
    needs:
      - Sort-StrucVars
    strategy:
      matrix:
        genome_release:
          - GRCh37
          - GRCh38
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-name: annonars-data-clinvar
          condarc: |
            channels:
              - conda-forge
              - bioconda
              - defaults
          create-args: >-
            samtools
            htslib
            python=${{ env.PYTHON_VERSION }}
            annonars=${{ env.ANNONARS_VERSION }}
            clinvar-tsv=${{ env.CLINVAR_TSV_VERSION }}

      - name: Get ClinVar version
        id: get-clinvar
        run: echo "clinvar-release=$(cat clinvar-release.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: get-today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache merge strucvars output
        id: cache-merge-strucvars-output
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/strucvar/merged
          key: merge-strucvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}

      - name: Retrieve sorting output
        if: steps.cache-merge-strucvars-output.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/${{ matrix.genome_release }}/strucvar/sorted
          key: sort-strucvars-${{ steps.get-clinvar.outputs.clinvar-release }}-${{ env.CLINVAR_TSV_VERSION }}-${{ env.MAX_RCVS }}-${{ matrix.genome_release }}
          fail-on-cache-miss: true

      - name: Run the merging
        if: steps.cache-merge-strucvars-output.outputs.cache-hit != 'true'
        run: bash src/run-merge-strucvars.sh
        env:
          GENOME_RELEASE: "${{ matrix.genome_release }}"
